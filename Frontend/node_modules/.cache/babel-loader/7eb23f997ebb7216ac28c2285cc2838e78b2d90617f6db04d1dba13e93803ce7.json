{"ast":null,"code":"function _readOnlyError(name) {\n  throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\");\n}\nimport React, { memo } from 'react';\nimport { ApiContext, ForceUpdateContext } from '../utils/context.js';\nimport panelPropsManager from './panelPropsManager.js';\nimport PropTypes from 'prop-types';\nvar PanelComponent = function PanelComponent(props) {\n  React.useContext(ForceUpdateContext);\n  var id = props.id,\n    selectedTabID = props.selectedTabID,\n    api = React.useContext(ApiContext),\n    isSelected = id === selectedTabID,\n    panelProps = panelPropsManager({\n      isSelected: isSelected,\n      api: api,\n      id: id\n    }),\n    previousSelectedTabID = api.state.selectedTabID,\n    _api$getTab = api.getTab(id),\n    PanelComponent = _api$getTab.panelComponent,\n    lazy = _api$getTab.lazy;\n  var hasBeenSelected = false;\n  if (!lazy || isSelected || previousSelectedTabID === id || api.activedTabsHistory.tabsId.indexOf(id) >= 0) {\n    hasBeenSelected = true;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", panelProps, hasBeenSelected ? PanelComponent ? /*#__PURE__*/React.createElement(PanelComponent, {\n    id: id,\n    isSelected: isSelected,\n    api: api.userProxy\n  }) : null : null);\n};\nvar Panel = /*#__PURE__*/memo(PanelComponent, function (oldProps, newProps) {\n  var id = oldProps.id,\n    oldActiveId = oldProps.selectedTabID,\n    newActiveId = newProps.selectedTabID;\n  return oldActiveId === newActiveId || id !== oldActiveId && id !== newActiveId;\n});\nexport default Panel;","map":{"version":3,"names":["_readOnlyError","name","TypeError","React","memo","ApiContext","ForceUpdateContext","panelPropsManager","PropTypes","PanelComponent","props","useContext","id","selectedTabID","api","isSelected","panelProps","previousSelectedTabID","state","_api$getTab","getTab","panelComponent","lazy","hasBeenSelected","activedTabsHistory","tabsId","indexOf","createElement","userProxy","Panel","oldProps","newProps","oldActiveId","newActiveId"],"sources":["/Users/akashm/Documents/EdurekaInternship/InternshipGauriiMa'am/ReactJs/zomato/node_modules/react-dyn-tabs/lib/esm/panel/panel.js"],"sourcesContent":["function _readOnlyError(name) { throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\"); }\n\nimport React, { memo } from 'react';\nimport { ApiContext, ForceUpdateContext } from '../utils/context.js';\nimport panelPropsManager from './panelPropsManager.js';\nimport PropTypes from 'prop-types';\n\nvar PanelComponent = function PanelComponent(props) {\n  React.useContext(ForceUpdateContext);\n\n  var id = props.id,\n      selectedTabID = props.selectedTabID,\n      api = React.useContext(ApiContext),\n      isSelected = id === selectedTabID,\n      panelProps = panelPropsManager({\n    isSelected: isSelected,\n    api: api,\n    id: id\n  }),\n      previousSelectedTabID = api.state.selectedTabID,\n      _api$getTab = api.getTab(id),\n      PanelComponent = _api$getTab.panelComponent,\n      lazy = _api$getTab.lazy;\n\n  var hasBeenSelected = false;\n\n  if (!lazy || isSelected || previousSelectedTabID === id || api.activedTabsHistory.tabsId.indexOf(id) >= 0) {\n    hasBeenSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", panelProps, hasBeenSelected ? PanelComponent ? /*#__PURE__*/React.createElement(PanelComponent, {\n    id: id,\n    isSelected: isSelected,\n    api: api.userProxy\n  }) : null : null);\n};\n\nvar Panel = /*#__PURE__*/memo(PanelComponent, function (oldProps, newProps) {\n  var id = oldProps.id,\n      oldActiveId = oldProps.selectedTabID,\n      newActiveId = newProps.selectedTabID;\n  return oldActiveId === newActiveId || id !== oldActiveId && id !== newActiveId;\n});\nexport default Panel;"],"mappings":"AAAA,SAASA,cAAc,CAACC,IAAI,EAAE;EAAE,MAAM,IAAIC,SAAS,CAAC,IAAI,GAAGD,IAAI,GAAG,iBAAiB,CAAC;AAAE;AAEtF,OAAOE,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SAASC,UAAU,EAAEC,kBAAkB,QAAQ,qBAAqB;AACpE,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,SAAS,MAAM,YAAY;AAElC,IAAIC,cAAc,GAAG,SAASA,cAAc,CAACC,KAAK,EAAE;EAClDP,KAAK,CAACQ,UAAU,CAACL,kBAAkB,CAAC;EAEpC,IAAIM,EAAE,GAAGF,KAAK,CAACE,EAAE;IACbC,aAAa,GAAGH,KAAK,CAACG,aAAa;IACnCC,GAAG,GAAGX,KAAK,CAACQ,UAAU,CAACN,UAAU,CAAC;IAClCU,UAAU,GAAGH,EAAE,KAAKC,aAAa;IACjCG,UAAU,GAAGT,iBAAiB,CAAC;MACjCQ,UAAU,EAAEA,UAAU;MACtBD,GAAG,EAAEA,GAAG;MACRF,EAAE,EAAEA;IACN,CAAC,CAAC;IACEK,qBAAqB,GAAGH,GAAG,CAACI,KAAK,CAACL,aAAa;IAC/CM,WAAW,GAAGL,GAAG,CAACM,MAAM,CAACR,EAAE,CAAC;IAC5BH,cAAc,GAAGU,WAAW,CAACE,cAAc;IAC3CC,IAAI,GAAGH,WAAW,CAACG,IAAI;EAE3B,IAAIC,eAAe,GAAG,KAAK;EAE3B,IAAI,CAACD,IAAI,IAAIP,UAAU,IAAIE,qBAAqB,KAAKL,EAAE,IAAIE,GAAG,CAACU,kBAAkB,CAACC,MAAM,CAACC,OAAO,CAACd,EAAE,CAAC,IAAI,CAAC,EAAE;IACzGW,eAAe,GAAG,IAAI;EACxB;EAEA,OAAO,aAAapB,KAAK,CAACwB,aAAa,CAAC,KAAK,EAAEX,UAAU,EAAEO,eAAe,GAAGd,cAAc,GAAG,aAAaN,KAAK,CAACwB,aAAa,CAAClB,cAAc,EAAE;IAC7IG,EAAE,EAAEA,EAAE;IACNG,UAAU,EAAEA,UAAU;IACtBD,GAAG,EAAEA,GAAG,CAACc;EACX,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;AACnB,CAAC;AAED,IAAIC,KAAK,GAAG,aAAazB,IAAI,CAACK,cAAc,EAAE,UAAUqB,QAAQ,EAAEC,QAAQ,EAAE;EAC1E,IAAInB,EAAE,GAAGkB,QAAQ,CAAClB,EAAE;IAChBoB,WAAW,GAAGF,QAAQ,CAACjB,aAAa;IACpCoB,WAAW,GAAGF,QAAQ,CAAClB,aAAa;EACxC,OAAOmB,WAAW,KAAKC,WAAW,IAAIrB,EAAE,KAAKoB,WAAW,IAAIpB,EAAE,KAAKqB,WAAW;AAChF,CAAC,CAAC;AACF,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}